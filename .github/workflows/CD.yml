name: CD Workflow

on:
  push:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8 pytest great_expectations

      - name: Lint (flake8)
        run: flake8 app tests train

      - name: Format Check (black)
        run: black --check app tests train

      - name: Run tests
        run: pytest

      - name: Data Quality Check
        run: pytest tests/test_data_quality.py

  build-and-deploy:
    needs: ci
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}/titanic-api:latest" | tr '[:upper:]' '[:lower:]')
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Deploy with Docker Compose
        run: |
          IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}/titanic-api:latest" | tr '[:upper:]' '[:lower:]')
          export IMAGE_NAME=$IMAGE_NAME
          docker-compose pull
          docker-compose up -d