name: CD

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted 
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black pytest great_expectations
          
      - name: Lint, test, and validate
        run: |
          flake8 --max-line-length=88 .
          black --check .
          pytest tests/ -v
          
      - name: Fix Docker permissions
        run: |
          sudo chown $USER:docker /var/run/docker.sock || true
          sudo chmod 666 /var/run/docker.sock || true
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          
      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/titanic-api:latest .
          docker push ghcr.io/${{ github.repository }}/titanic-api:latest
          
      - name: Deploy with Docker Compose
        run: |
          # Update the image reference in docker-compose.yml
          sed -i 's|ghcr.io/YOUR_USERNAME/YOUR_REPO_NAME|ghcr.io/${{ github.repository }}|g' docker-compose.yml
          
          # Pull the latest image and redeploy
          docker compose pull
          docker compose down || true
          docker compose up -d
          
      - name: Trigger retraining (if exists)
        run: |
          if [ -f src/retrain.py ]; then
            python src/retrain.py
          fi
        env:
          PYTHONPATH: ${{ github.workspace }}/src