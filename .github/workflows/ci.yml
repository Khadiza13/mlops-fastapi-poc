# name: CI

# on:
#   pull_request:
#     branches: [main]

# jobs:
#   quality:
#     runs-on: self-hosted
    
#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.9'
          
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
#           pip install flake8 black pytest great_expectations
          
#       - name: Lint with flake8
#         run: flake8 --max-line-length=88 .
        
#       - name: Format check with black
#         run: black --check .
        
#       - name: Run unit and data validation tests
#         run: pytest tests/
        
#       - name: Fix Docker permissions
#         run: |
#           sudo chown $USER:docker /var/run/docker.sock || true
#           sudo chmod 666 /var/run/docker.sock || true
          
#       - name: Build Docker image
#         run: docker build -t titanic-api .

# name: CI

# on:
#   pull_request:

# jobs:
#   ci:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.11"

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
#           pip install black flake8 pytest great_expectations

#       - name: Lint (flake8)
#         run: flake8 app tests train.py

#       - name: Format Check (black)
#         run: black --check app tests train.py

#       - name: Run tests
#         run: pytest

#       - name: Data Quality Check
#         run: pytest tests/test_data_quality.py

#       # âœ… Add these steps for Docker Build without needing /var/run/docker.sock
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Docker Build (with Buildx)
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           push: false  
#           tags: titanic-api:latest


# =====================================

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black flake8 pytest great_expectations

      - name: Lint (flake8)
        run: flake8 app tests train.py

      - name: Format Check (black)
        run: black --check app tests train.py

      - name: Run tests
        run: pytest

      - name: Data Quality Check
        run: pytest tests/test_data_quality.py

      # Docker Build and Push to GHCR
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/titanic-api:latest .
          docker push ghcr.io/${{ github.repository }}/titanic-api:latest
